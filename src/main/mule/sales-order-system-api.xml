<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:os="http://www.mulesoft.org/schema/mule/os" 
      xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" 
      xmlns="http://www.mulesoft.org/schema/mule/core" 
      xmlns:apikit="http://www.mulesoft.org/schema/mule/mule-apikit" 
      xmlns:http="http://www.mulesoft.org/schema/mule/http" 
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd 
      http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
      http://www.mulesoft.org/schema/mule/mule-apikit http://www.mulesoft.org/schema/mule/mule-apikit/current/mule-apikit.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd">
    
    <!-- Main API Router Flow -->
    <flow name="sales-order-system-api-main">
        <http:listener config-ref="sales-order-system-api-httpListenerConfig" path="${api.base.path}/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        
        <logger level="INFO" message="Received request: #[attributes.method] #[attributes.requestPath]" category="com.company.api.request"/>
        
        <!-- API Key Validation -->
        <apikit:router config-ref="sales-order-system-api-config" />
        
        <error-handler>
            <on-error-propagate type="APIKIT:BAD_REQUEST">
                <logger level="WARN" message="Bad request: #[error.description]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="400"/>
                <set-payload value='#[{
                    "code": "BAD_REQUEST",
                    "message": error.description,
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <logger level="WARN" message="Resource not found: #[attributes.requestPath]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="404"/>
                <set-payload value='#[{
                    "code": "NOT_FOUND",
                    "message": "Resource not found",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:METHOD_NOT_ALLOWED">
                <logger level="WARN" message="Method not allowed: #[attributes.method] #[attributes.requestPath]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="405"/>
                <set-payload value='#[{
                    "code": "METHOD_NOT_ALLOWED",
                    "message": "Method not allowed",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:NOT_ACCEPTABLE">
                <logger level="WARN" message="Not acceptable content: #[error.description]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="406"/>
                <set-payload value='#[{
                    "code": "NOT_ACCEPTABLE",
                    "message": "Not acceptable content",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
            <on-error-propagate type="APIKIT:UNSUPPORTED_MEDIA_TYPE">
                <logger level="WARN" message="Unsupported media type: #[error.description]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="415"/>
                <set-payload value='#[{
                    "code": "UNSUPPORTED_MEDIA_TYPE",
                    "message": "Unsupported media type",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
            <on-error-propagate type="ANY">
                <logger level="ERROR" message="Unhandled error: #[error.description]" category="com.company.api.error"/>
                <set-variable variableName="httpStatus" value="500"/>
                <set-payload value='#[{
                    "code": "INTERNAL_SERVER_ERROR",
                    "message": "An internal server error occurred",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
        </error-handler>
    </flow>
    
    <!-- API Console Flow -->
    <flow name="sales-order-system-api-console">
        <http:listener config-ref="sales-order-system-api-httpListenerConfig" path="/console/*">
            <http:response statusCode="#[vars.httpStatus default 200]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:response>
            <http:error-response statusCode="#[vars.httpStatus default 500]">
                <http:headers>#[vars.outboundHeaders default {}]</http:headers>
            </http:error-response>
        </http:listener>
        <apikit:console config-ref="sales-order-system-api-config"/>
        <error-handler>
            <on-error-propagate type="APIKIT:NOT_FOUND">
                <set-variable variableName="httpStatus" value="404"/>
                <set-payload value='#[{
                    "code": "NOT_FOUND",
                    "message": "Resource not found",
                    "timestamp": now()
                }]'/>
                <set-variable variableName="outboundHeaders" value="#[{'Content-Type': 'application/json'}]"/>
            </on-error-propagate>
        </error-handler>
    </flow>
    
    <!-- API Interface Implementation Flows -->
    <flow name="get:\health:sales-order-system-api-config">
        <logger level="INFO" message="Executing health check" category="com.company.api.health"/>
        <flow-ref name="healthCheckFlow"/>
    </flow>
    
    <flow name="get:\orders:sales-order-system-api-config">
        <logger level="INFO" message="Retrieving orders with filters: #[message.attributes.queryParams]" category="com.company.api.orders"/>
        <flow-ref name="getOrdersFlow"/>
    </flow>
    
    <flow name="post:\orders:application\json:sales-order-system-api-config">
        <logger level="INFO" message="Creating new order" category="com.company.api.orders"/>
        <flow-ref name="createOrderFlow"/>
    </flow>
    
    <flow name="get:\orders\(orderId):sales-order-system-api-config">
        <logger level="INFO" message="Retrieving order by ID: #[attributes.uriParams.orderId]" category="com.company.api.orders"/>
        <flow-ref name="getOrderByIdFlow"/>
    </flow>
    
    <flow name="put:\orders\(orderId):application\json:sales-order-system-api-config">
        <logger level="INFO" message="Updating order with ID: #[attributes.uriParams.orderId]" category="com.company.api.orders"/>
        <flow-ref name="updateOrderFlow"/>
    </flow>
    
    <flow name="delete:\orders\(orderId):sales-order-system-api-config">
        <logger level="INFO" message="Deleting order with ID: #[attributes.uriParams.orderId]" category="com.company.api.orders"/>
        <flow-ref name="deleteOrderFlow"/>
    </flow>
</mule>